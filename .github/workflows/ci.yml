---
name: Continuous Integration

# yamllint disable-line rule:truthy
on: [push, pull_request]

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements_test.txt
          pip install -r requirements.txt
          pip install pre-commit
          pip list
          pre-commit --version
      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure
  test:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        python: [3.8]
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements_test.txt
          pip install -r requirements.txt
          pip list
      - name: Pytest with coverage reporting
        run: pytest ./tests --cov=cdpctl --cov-report=xml
      - name: Upload coverage to Codecov
        if: matrix.python == 3.8 && matrix.os == 'ubuntu'
        uses: codecov/codecov-action@v1.5.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
  publish:
    if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs:
      - linting
      - test
    steps:
      - name: Login to Github Container Registry
        uses: docker/login-action@v1.8.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PKG_PAT }}
      - name: Get Date of Build
        id: date
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create/update text file
        env:
          DATE: "${{ steps.date.outputs.time }}"
        run: |
          echo "\"\"\"Version info.\"\"\"" > cdpctl/__version__.py
          echo "__version__ = \"${{ env.DATE }}.dev${{github.run_number}}\"" >> cdpctl/__version__.py
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2.3.0
        env:
          DATE: "${{ steps.date.outputs.time }}"
        with:
          tags: |
            ghcr.io/cloudera-labs/cdpctl:${{ env.DATE }}.dev${{github.run_number}}
            ghcr.io/cloudera-labs/cdpctl:dev-latest
          push: true
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.time }}
            BUILD_TAG=${{ env.DATE }}.dev${{github.run_number}}
